
package VistaClientes;

import static VistaClientes.VentanaClientes.clientes;
import static VistaClientes.VentanaClientes.clientes;
import gestordeclientesgimnasio.Cliente;
import java.awt.Color;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author CLEYMER
 */
public class DialogoEliminar extends javax.swing.JDialog {
    
    private static int posCliente;

    private static DefaultListModel<String> modelo = new DefaultListModel<>();
    /**
     * Creates new form DialogoEliminar
     */
    public DialogoEliminar(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        btnEliminar.setEnabled(false);
    }
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        panelInformacionCliente = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        etiInfoCliente = new javax.swing.JTextPane();
        etiDocumentoCliente = new javax.swing.JLabel();
        txtDocumentoCliente = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnMostrarListaClientes = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaClientes = new javax.swing.JList<>();
        btnEliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Eliminar Cliente");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ELIMINAR CLIENTE");

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        panelInformacionCliente.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 3), javax.swing.BorderFactory.createTitledBorder("Informacion Cliente")));

        etiInfoCliente.setEditable(false);
        jScrollPane1.setViewportView(etiInfoCliente);

        javax.swing.GroupLayout panelInformacionClienteLayout = new javax.swing.GroupLayout(panelInformacionCliente);
        panelInformacionCliente.setLayout(panelInformacionClienteLayout);
        panelInformacionClienteLayout.setHorizontalGroup(
            panelInformacionClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInformacionClienteLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(227, 227, 227))
        );
        panelInformacionClienteLayout.setVerticalGroup(
            panelInformacionClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInformacionClienteLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        etiDocumentoCliente.setText("Documento Cliente:");

        txtDocumentoCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtDocumentoClienteMouseClicked(evt);
            }
        });
        txtDocumentoCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDocumentoClienteKeyTyped(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnMostrarListaClientes.setText("Mostrar Listado Clientes");
        btnMostrarListaClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarListaClientesActionPerformed(evt);
            }
        });

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        listaClientes.setModel(modelo);
        listaClientes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listaClientes.setToolTipText("");
        listaClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaClientesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(listaClientes);

        jScrollPane3.setViewportView(jScrollPane2);

        btnEliminar.setText("Eliminar Cliente");
        btnEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(388, 388, 388)
                                .addComponent(btnEliminar)
                                .addGap(32, 32, 32)
                                .addComponent(btnCancelar))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(etiDocumentoCliente)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtDocumentoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnMostrarListaClientes)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(41, 41, 41)
                                        .addComponent(btnBuscar))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(panelInformacionCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiDocumentoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDocumentoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnMostrarListaClientes)
                        .addGap(13, 13, 13)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panelInformacionCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminar)
                    .addComponent(btnCancelar))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        int opcion = JOptionPane.showConfirmDialog(null,"¿Esta seguro que desea continuar?","Confirmacion",JOptionPane.OK_CANCEL_OPTION);
        
        if(opcion==JOptionPane.OK_OPTION){
            if(clientes.isEmpty()){
            modelo.clear();
            etiInfoCliente.setText("No hay clientes registrados!!");
            } else {
                eliminarCliente(posCliente);
                etiInfoCliente.setText("El cliente ha sido eliminado con exito");
                // Actualizar la lista
                listarCliente(clientes);
            } 
                
        } else if(opcion==JOptionPane.CANCEL_OPTION){
            this.dispose();
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        if(!validarDatosEnCampo(txtDocumentoCliente, "Para buscar debe Ingresar el documento")){
            return;
        }
        
        String numCedulaBuscar = txtDocumentoCliente.getText();
        if(clientes.isEmpty()){ // Si la lista esta vacia// no hay clientes
            etiInfoCliente.setText("No hay clientes registrados");
        } else { // Si no buscamos al cliente
            if (!(buscarCliente(numCedulaBuscar)==-1)) {
                // Si lo encuentra encontramos la posicion dentro de la lista
                posCliente = buscarCliente(numCedulaBuscar);
                // Mostramos su informacion
                mostrarInfoCliente(posCliente);
                // Habilitamos el boton para eliminar cliente
                btnEliminar.setEnabled(true);
            } else { // Si no lo encuentra
                etiInfoCliente.setText("\nEl usuario no existe en el registro de \nclientes del Gimnasio");
                btnEliminar.setEnabled(false);
            }
        }
        
        
        
        

    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtDocumentoClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDocumentoClienteMouseClicked
        // TODO add your handling code here:
        txtDocumentoCliente.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtDocumentoClienteMouseClicked

    private void txtDocumentoClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDocumentoClienteKeyTyped
        // TODO add your handling code here:
        char tecla = evt.getKeyChar();
        if(!Character.isDigit(tecla)) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtDocumentoClienteKeyTyped

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnMostrarListaClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarListaClientesActionPerformed
        // TODO add your handling code here:
        //modelo.clear();
        if(clientes.isEmpty()){
            modelo.clear();
            etiInfoCliente.setText("No hay clientes registrados!!");
        } else {
            listarCliente(clientes);
        } 
        
        
    }//GEN-LAST:event_btnMostrarListaClientesActionPerformed

    private void listaClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaClientesMouseClicked
        // TODO add your handling code here:
        int pos = clientes.indexOf(listaClientes.getSelectedIndex());
        
        mostrarInfoCliente(pos);
        btnEliminar.setEnabled(true);
        
    }//GEN-LAST:event_listaClientesMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogoEliminar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogoEliminar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogoEliminar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogoEliminar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DialogoEliminar dialog = new DialogoEliminar(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
        
    
    private boolean validarDatosEnCampo(JTextField campo, String mensaje) {
        String dato = campo.getText();
        dato = dato.trim();
        if(dato.isEmpty()) {
            campo.requestFocus();
            campo.setBackground(Color.red);
            JOptionPane.showMessageDialog(this, mensaje, "Validar", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }
    
    public void eliminarCliente(int posicion){
        clientes.remove(posicion);
        etiInfoCliente.setText("\nEL cliente ha sido eliminado con exito");
        btnEliminar.setEnabled(false);
    }
    
    public void mostrarInfoCliente(int posicionCliente){
        Cliente clienteAMostrar = clientes.get(posicionCliente);
        
        String datos="Numero de cedula: "+clienteAMostrar.cedula+"\n";
        datos+="Nombre Usuario: "+clienteAMostrar.nombre+"\n";
        datos+="Apellido: "+ clienteAMostrar.apellido+"\n";
        datos+="Correo: "+ clienteAMostrar.correo+"\n";
        datos+="Telefono: "+clienteAMostrar.telefono+"\n";
        datos+="Plan Elegido"+ clienteAMostrar.planElegido+"\n";
        datos+="Plan Inicio: "+clienteAMostrar.inicioPlan+"\n";
        datos+="Plan Fin: "+clienteAMostrar.finPlan+"\n";

        etiInfoCliente.setText(datos);
    }
    
    public void listarCliente(List<Cliente> clientes){
        modelo.clear();
        for (Cliente cliente : clientes) {
            modelo.addElement(cliente.nombre+" "+ cliente.apellido+ " - Telefono:  "+cliente.telefono);
        }
    }
    
    public int buscarCliente(String cedulaBuscada){
        int pos=-1;
        for(Cliente cliente: clientes){
            if(cliente.cedula.equals(cedulaBuscada)){
                pos = clientes.indexOf(cliente);
            }
        }
        return pos;
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnMostrarListaClientes;
    private javax.swing.JLabel etiDocumentoCliente;
    private javax.swing.JTextPane etiInfoCliente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> listaClientes;
    private javax.swing.JPanel panelInformacionCliente;
    private javax.swing.JTextField txtDocumentoCliente;
    // End of variables declaration//GEN-END:variables
}
